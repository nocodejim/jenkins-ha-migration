# This file is processed by Grafana to automatically load dashboards

apiVersion: 1

providers:
  - name: 'default' # A uniquely identifiable name for the provider
    orgId: 1 # Default organization ID
    folder: '' # Provision dashboards to the root folder (General)
    type: file
    disableDeletion: false # Set to true to prevent users from deleting dashboards from the UI
    editable: true # Set to false to prevent users from editing dashboards from the UI
    options:
      path: /var/lib/grafana/dashboards # Path to the directory where Grafana will load dashboards from
      # This path is inside the Grafana container and corresponds to the volume mount
      # specified in docker-compose.yml:
      # ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      # Grafana will look for .json files in this directory.
      # Folders and subfolders are also scanned.
      #
      # Example: if you have dashboards in ./grafana/dashboards/myfolder/my_dashboard.json
      # they will be provisioned.
      #
      # `updateIntervalSeconds` can be added to periodically rescan the path for new/updated dashboards.
      # updateIntervalSeconds: 10 # Optional: Rescan every 10 seconds
      #
      # `allowUiUpdates` can be set to true to allow dashboard updates from the UI to be written back
      # to the JSON files. This requires the volume mount to be read-write (rw) instead of read-only (ro).
      # For automated setups, it's often better to keep this false and manage dashboards via version control.
      # allowUiUpdates: false

# You can define multiple providers if you want to load dashboards from different sources
# or with different settings.
#
# - name: 'another-provider'
#   orgId: 1
#   folder: 'My Custom Dashboards' # Dashboards will be placed in a folder named 'My Custom Dashboards'
#   type: file
#   options:
#     path: /another/path/to/dashboards
#
# Ensure that the paths specified here are accessible within the Grafana container and
# that the corresponding volumes are correctly mounted in your docker-compose.yml.
# The `jenkins-dashboard.json` should already be in the `monitoring/grafana/dashboards` directory.
